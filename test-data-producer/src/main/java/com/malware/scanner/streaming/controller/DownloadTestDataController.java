package com.malware.scanner.streaming.controller;

import com.malware.scanner.streaming.model.CheckEvent;
import lombok.RequiredArgsConstructor;
import lombok.extern.log4j.Log4j2;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.ResponseEntity;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;


@Log4j2
@RestController
@RequiredArgsConstructor
@RequestMapping
public class DownloadTestDataController {
    @Value(value = "${test.topic.read.events.name}")
    private String testTopicName;
    private final KafkaTemplate<String, CheckEvent> kafkaTemplate;

    @PostMapping("/downloadTestData")
    public ResponseEntity download(@RequestBody final List<CheckEvent> checkEvents) {
        log.info("Entering to DownloadTestDataController.download() called with payload: {}", checkEvents);
        checkEvents.forEach(message -> kafkaTemplate.send(testTopicName, message));
        return ResponseEntity.ok().build();
    }
}
