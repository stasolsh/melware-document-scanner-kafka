package com.malware.scanner.streaming.service.filetype;

import com.malware.scanner.streaming.dao.BlacklistedIbanDao;
import com.malware.scanner.streaming.exception.ScannerTechnicalException;
import com.malware.scanner.streaming.model.CheckEvent;
import com.malware.scanner.streaming.model.CheckResultEvent;
import com.malware.scanner.streaming.model.FileType;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.stream.Collectors;

import static com.malware.scanner.streaming.model.CheckResultEvent.StateEnum.*;
import static com.malware.scanner.streaming.model.FileType.PDF;
import static com.malware.scanner.streaming.utils.GetIbansFromPDF.findIbans;

@Service
public class PdfDocumentTypeProcessor implements DocumentTypeProcessor {
    private final BlacklistedIbanDao blacklistedIbanDao;

    public PdfDocumentTypeProcessor(BlacklistedIbanDao blacklistedIbanDao) {
        this.blacklistedIbanDao = blacklistedIbanDao;
    }
    @Override
    public CheckResultEvent verify(final CheckEvent checkEvent, final String name) {
        CheckResultEvent checkResultEvent = new CheckResultEvent().setName(name);
        try {
            CheckResultEvent.StateEnum stateEnum;
            List<String> ibans =  findIbans(checkEvent.getUrl());
             if(blacklistedIbanDao.existsByIbanCodeIn(ibans)){
                 stateEnum = SUSPICIOUS;
                 String blacklistedIbans =  ibans.stream().filter(blacklistedIbanDao::existsByIbanCode).collect(Collectors.joining(","));
                 checkResultEvent.setDetails("There are blacklisted IBAN's: " + blacklistedIbans);
             } else {
                 stateEnum = OK;
                 checkResultEvent.setDetails("There are not blacklisted IBAN's.");
             }
            checkResultEvent.setState(stateEnum);
        } catch (ScannerTechnicalException e){
            checkResultEvent.setState(ERROR);
            checkResultEvent.setDetails(e.getCause().toString());
        }
        return checkResultEvent;
    }


    @Override
    public FileType getDocType() {
        return PDF;
    }
}
